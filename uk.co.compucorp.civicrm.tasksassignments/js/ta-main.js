require.config({    urlArgs: "bust=" + (new Date()).getTime(),    paths: {        angular: 'vendor/angular/angular.min',        angularBootstrap: 'vendor/angular/ui-bootstrap-tpls',        angularResource: 'vendor/angular/angular-resource.min',        angularRoute: 'vendor/angular/angular-route.min'    },    shim: {        angular: {            exports: 'angular'        },        angularBootstrap: {            deps: ['angular']        },        angularResource: {            deps: ['angular']        },        angularRoute: {            deps: ['angular']        }    }});require([    'angular',    'app',    'controllers/taskList',    'controllers/task'],function(angular, app){    'use strict';    app.constant('settings', {        classNamePrefix: 'ct-',        debug: true,        pathApp: '/sites/all/modules/civicrm/tools/extensions/uk.co.compucorp.civicrm.tasksassignments/',        pathTpl: '/sites/all/modules/civicrm/tools/extensions/uk.co.compucorp.civicrm.tasksassignments/views/'    });    app.config(['settings','$routeProvider','$resourceProvider','$httpProvider','$logProvider',        function(settings, $routeProvider, $resourceProvider, $httpProvider, $logProvider){            $logProvider.debugEnabled(settings.debug);            $routeProvider.                when('/', {                    controller: 'TaskListCtrl',                    templateUrl: settings.pathTpl+'taskList.html?v='+(new Date().getTime()),                    resolve: {                        taskList: function(){                            return [                                {                                    id: 1,                                    resolved: false                                },                                {                                    id: 2,                                    resolved: false                                },                                {                                    id: 4,                                    resolved: false                                },{                                    id: 5,                                    resolved: true                                },                                {                                    id: 6,                                    resolved: true                                },                                {                                    id: 7,                                    resolved: true                                }                            ]                        }                    }                }            ).otherwise({redirectTo:'/'});            $resourceProvider.defaults.stripTrailingSlashes = false;            $httpProvider.defaults.headers.common["X-Requested-With"] = 'XMLHttpRequest';        }    ]);    app.run(['settings','$rootScope','$q', '$log',        function(settings, $rootScope, $q, $log){            $log.debug('app.run');            $rootScope.pathTpl = settings.pathTpl;            $rootScope.prefix = settings.classNamePrefix;        }    ]);    document.addEventListener('taLoad', function(){        angular.bootstrap(document.getElementById('civitasks'), ['civitasks']);    });})