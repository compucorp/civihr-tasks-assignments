!function(t){"use strict";angular.module("crm-tasks-workflows.controllers",[])}(),function(t){"use strict";angular.module("crm-tasks-workflows.core",["crmCaseType"])}(),function(t){"use strict";angular.module("crm-tasks-workflows.decorators",[])}(),function(t){"use strict";function e(t,e,o,r,s,c,i){e.debug("Controller: CaseTypeExtendedController");var n,a,l={};function u(t,e){l.addActivity(t,e),t.activityTypes.forEach(function(t){t.name===e&&delete t.reference_activity})}s.actTypes={values:(n=c.values.map(function(t){return t.label=t.label+" (Task)",t}),a=i.values.map(function(t){return t.label=t.label+" (Document)",t}),n.concat(a))},t("CaseTypeCtrl",{$scope:o,crmApi:r,apiCalls:s}),l.addActivity=o.addActivity,o.addActivity=u,!o.caseType.id&&(o.caseType.definition.activitySets[0].activityTypes=[])}angular.module("crm-tasks-workflows.controllers").controller("CaseTypeExtendedController",e),e.$inject=["$controller","$log","$scope","crmApi","apiCalls","activityOptionsTask","activityOptionsDocument"]}(),function(t){"use strict";function e(t){var e;function o(e){return["crmApi",function(t){return t("OptionValue","get",{option_group_id:"activity_type",component_id:e,sequential:1,options:{sort:"name",limit:0}})}]}return(e=t.routes["/caseType/:id"]).controller="CaseTypeExtendedController",e.resolve.activityOptionsTask=o("CiviTask"),e.resolve.activityOptionsDocument=o("CiviDocument"),t}angular.module("crm-tasks-workflows.decorators").config(["$provide",function(t){t.decorator("$route",e)}]),e.$inject=["$delegate"]}(),function(t){"use strict";angular.module("crm-tasks-workflows",["crm-tasks-workflows.core","crm-tasks-workflows.controllers","crm-tasks-workflows.decorators"])}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
