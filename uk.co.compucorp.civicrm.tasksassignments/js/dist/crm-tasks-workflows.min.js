!function(t){"use strict";angular.module("crm-tasks-workflows.controllers",[])}(),function(t){"use strict";angular.module("crm-tasks-workflows.core",["crmCaseType"])}(),function(t){"use strict";angular.module("crm-tasks-workflows.decorators",[])}(),function(t){"use strict";function e(t,e,o,r,s,n,c){e.debug("Controller: CaseTypeExtendedController");var i,a,l={};function u(t,e){l.addActivity(t,e),t.activityTypes.forEach(function(t){t.name===e&&delete t.reference_activity})}s.actTypes={values:(i=n.values.map(function(t){return t.label=t.label+" (Task)",t}),a=c.values.map(function(t){return t.label=t.label+" (Document)",t}),i.concat(a))},t("CaseTypeCtrl",{$scope:o,crmApi:r,apiCalls:s}),l.addActivity=o.addActivity,o.addActivity=u}angular.module("crm-tasks-workflows.controllers").controller("CaseTypeExtendedController",e),e.$inject=["$controller","$log","$scope","crmApi","apiCalls","activityOptionsTask","activityOptionsDocument"]}(),function(t){"use strict";function e(t){var e,o;function r(e){return["crmApi",function(t){return t("OptionValue","get",{option_group_id:"activity_type",component_id:e,sequential:1,options:{sort:"name",limit:0}})}]}return e=t.routes["/caseType/:id"],o=t.routes["/caseType"],e.controller="CaseTypeExtendedController",e.resolve.activityOptionsTask=r("CiviTask"),e.resolve.activityOptionsDocument=r("CiviDocument"),o.resolve.caseTypes=["crmApi",function(t){return t("CaseType","get",{category:"WORKFLOW",options:{limit:0}})}],t}angular.module("crm-tasks-workflows.decorators").config(["$provide",function(t){t.decorator("$route",e)}]),e.$inject=["$delegate"]}(),function(t){"use strict";angular.module("crm-tasks-workflows",["crm-tasks-workflows.core","crm-tasks-workflows.controllers","crm-tasks-workflows.decorators"])}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNybS10YXNrcy13b3JrZmxvd3MuY29udHJvbGxlcnMuanMiLCJjcm0tdGFza3Mtd29ya2Zsb3dzLmNvcmUuanMiLCJjcm0tdGFza3Mtd29ya2Zsb3dzLmRlY29yYXRvci5qcyIsImNhc2V0eXBlLmV4dGVuZGVkLmNvbnRyb2xsZXIuanMiLCJyb3V0ZS5kZWNvcmF0b3IuanMiLCJjcm0tdGFza3Mtd29ya2Zsb3dzLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJDYXNlVHlwZUV4dGVuZGVkQ29udHJvbGxlciIsIiRjb250cm9sbGVyIiwiJGxvZyIsIiRzY29wZSIsImNybUFwaSIsImFwaUNhbGxzIiwiYWN0aXZpdHlPcHRpb25zVGFzayIsImFjdGl2aXR5T3B0aW9uc0RvY3VtZW50IiwiZGVidWciLCJ0YXNrT3B0aW9ucyIsImRvY3VtZW50T3B0aW9ucyIsInBhcmVudE1ldGhvZHMiLCJhZGRBY3Rpdml0eSIsImFjdGl2aXR5U2V0IiwiYWN0aXZpdHlUeXBlIiwiYWN0aXZpdHlUeXBlcyIsImZvckVhY2giLCJhY3Rpdml0eSIsIm5hbWUiLCJyZWZlcmVuY2VfYWN0aXZpdHkiLCJhY3RUeXBlcyIsInZhbHVlcyIsIm1hcCIsInR5cGUiLCJsYWJlbCIsImRvY3VtZW50IiwiY29uY2F0IiwiY29udHJvbGxlciIsIiRpbmplY3QiLCJSb3V0ZURlY29yYXRvciIsIiRkZWxlZ2F0ZSIsImNhc2VUeXBlRWRpdFJvdXRlIiwiY2FzZVR5cGVMaXN0Um91dGUiLCJnZXRSZXNvbHZlckZvckFjdGl2aXR5VHlwZUNvbXBvbmVudCIsImNvbXBvbmVudE5hbWUiLCJvcHRpb25fZ3JvdXBfaWQiLCJjb21wb25lbnRfaWQiLCJzZXF1ZW50aWFsIiwib3B0aW9ucyIsInNvcnQiLCJsaW1pdCIsInJvdXRlcyIsInJlc29sdmUiLCJjYXNlVHlwZXMiLCJjYXRlZ29yeSIsImNvbmZpZyIsIiRwcm92aWRlIiwiZGVjb3JhdG9yIl0sIm1hcHBpbmdzIjoiQ0FFQSxTQUFBQSxHQUNBLGFBR0FBLFFBREFDLE9BQUEsa0NBQUEsSUFIQSxHQ0FBLFNBQUFELEdBQ0EsYUFLQUEsUUFIQUMsT0FBQSwyQkFBQSxDQUNBLGdCQUpBLEdDQUEsU0FBQUQsR0FDQSxhQUdBQSxRQURBQyxPQUFBLGlDQUFBLElBSEEsR0NBQSxTQUFBRCxHQUNBLGFBU0EsU0FBQUUsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsR0FDQUwsRUFBQU0sTUFBQSwwQ0FFQSxJQXdDQUMsRUFNQUMsRUE5Q0FDLEVBQUEsR0FlQSxTQUFBQyxFQUFBQyxFQUFBQyxHQUNBSCxFQUFBQyxZQUFBQyxFQUFBQyxHQUdBRCxFQUFBRSxjQUFBQyxRQUFBLFNBQUFDLEdBQ0FBLEVBQUFDLE9BQUFKLFVBQ0FHLEVBQUFFLHFCQVNBZCxFQUFBZSxTQUFBLENBQUFDLFFBVUFaLEVBQUFILEVBQUFlLE9BQUFDLElBQUEsU0FBQUMsR0FHQSxPQUZBQSxFQUFBQyxNQUFBRCxFQUFBQyxNQUFBLFVBRUFELElBR0FiLEVBQUFILEVBQUFjLE9BQUFDLElBQUEsU0FBQUcsR0FHQSxPQUZBQSxFQUFBRCxNQUFBQyxFQUFBRCxNQUFBLGNBRUFDLElBR0FoQixFQUFBaUIsT0FBQWhCLEtBckJBVCxFQUFBLGVBQUEsQ0FBQUUsT0FBQUEsRUFBQUMsT0FBQUEsRUFBQUMsU0FBQUEsSUExQkFNLEVBQUFDLFlBQUFULEVBQUFTLFlBQ0FULEVBQUFTLFlBQUFBLEVBaURBZCxRQWpFQUMsT0FBQSxtQ0FDQTRCLFdBQUEsNkJBQUEzQixHQUVBQSxFQUFBNEIsUUFBQSxDQUNBLGNBQUEsT0FBQSxTQUFBLFNBQUEsV0FBQSxzQkFBQSwyQkFQQSxHQ0FBLFNBQUE5QixHQUNBLGFBU0EsU0FBQStCLEVBQUFDLEdBQ0EsSUFDQUMsRUFDQUMsRUFlQSxTQUFBQyxFQUFBQyxHQUNBLE1BQUEsQ0FBQSxTQUFBLFNBQUE5QixHQUNBLE9BQUFBLEVBQUEsY0FBQSxNQUFBLENBQ0ErQixnQkFBQSxnQkFDQUMsYUFBQUYsRUFDQUcsV0FBQSxFQUNBQyxRQUFBLENBQUFDLEtBQUEsT0FBQUMsTUFBQSxPQW1CQSxPQXpDQVQsRUFBQUQsRUFBQVcsT0FBQSxpQkFDQVQsRUFBQUYsRUFBQVcsT0FBQSxhQUVBVixFQUFBSixXQUFBLDZCQUNBSSxFQUFBVyxRQUFBcEMsb0JBQUEyQixFQUFBLFlBQ0FGLEVBQUFXLFFBQUFuQyx3QkFBQTBCLEVBQUEsZ0JBRUFELEVBQUFVLFFBQUFDLFVBMEJBLENBQUEsU0FBQSxTQUFBdkMsR0FDQSxPQUFBQSxFQUFBLFdBQUEsTUFBQSxDQUNBd0MsU0FBQSxXQUNBTixRQUFBLENBQUFFLE1BQUEsT0FLQVYsRUFFQWhDLFFBcERBQyxPQUFBLGtDQUNBOEMsT0FBQSxDQUFBLFdBQUEsU0FBQUMsR0FDQUEsRUFBQUMsVUFBQSxTQUFBbEIsTUFHQUEsRUFBQUQsUUFBQSxDQUFBLGFBUkEsR0NBQSxTQUFBOUIsR0FDQSxhQU9BQSxRQUxBQyxPQUFBLHNCQUFBLENBQ0EsMkJBQ0Esa0NBQ0EsbUNBTkEiLCJmaWxlIjoiY3JtLXRhc2tzLXdvcmtmbG93cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgYW5ndWxhciAqL1xuXG4oZnVuY3Rpb24gKGFuZ3VsYXIpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXIubW9kdWxlKCdjcm0tdGFza3Mtd29ya2Zsb3dzLmNvbnRyb2xsZXJzJywgW10pO1xufSkoYW5ndWxhcik7XG4iLCIvKiBnbG9iYWwgYW5ndWxhciAqL1xuXG4oZnVuY3Rpb24gKGFuZ3VsYXIpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXIubW9kdWxlKCdjcm0tdGFza3Mtd29ya2Zsb3dzLmNvcmUnLCBbXG4gICAgJ2NybUNhc2VUeXBlJ1xuICBdKTtcbn0pKGFuZ3VsYXIpO1xuIiwiLyogZ2xvYmFsIGFuZ3VsYXIgKi9cblxuKGZ1bmN0aW9uIChhbmd1bGFyKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyLm1vZHVsZSgnY3JtLXRhc2tzLXdvcmtmbG93cy5kZWNvcmF0b3JzJywgW10pO1xufSkoYW5ndWxhcik7XG4iLCIvKiBnbG9iYWwgYW5ndWxhciAqL1xuXG4oZnVuY3Rpb24gKGFuZ3VsYXIpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXIubW9kdWxlKCdjcm0tdGFza3Mtd29ya2Zsb3dzLmNvbnRyb2xsZXJzJylcbiAgICAuY29udHJvbGxlcignQ2FzZVR5cGVFeHRlbmRlZENvbnRyb2xsZXInLCBDYXNlVHlwZUV4dGVuZGVkQ29udHJvbGxlcik7XG5cbiAgQ2FzZVR5cGVFeHRlbmRlZENvbnRyb2xsZXIuJGluamVjdCA9IFtcbiAgICAnJGNvbnRyb2xsZXInLCAnJGxvZycsICckc2NvcGUnLCAnY3JtQXBpJywgJ2FwaUNhbGxzJywgJ2FjdGl2aXR5T3B0aW9uc1Rhc2snLCAnYWN0aXZpdHlPcHRpb25zRG9jdW1lbnQnXG4gIF07XG5cbiAgZnVuY3Rpb24gQ2FzZVR5cGVFeHRlbmRlZENvbnRyb2xsZXIgKCRjb250cm9sbGVyLCAkbG9nLCAkc2NvcGUsIGNybUFwaSwgYXBpQ2FsbHMsIGFjdGl2aXR5T3B0aW9uc1Rhc2ssIGFjdGl2aXR5T3B0aW9uc0RvY3VtZW50KSB7XG4gICAgJGxvZy5kZWJ1ZygnQ29udHJvbGxlcjogQ2FzZVR5cGVFeHRlbmRlZENvbnRyb2xsZXInKTtcblxuICAgIHZhciBwYXJlbnRNZXRob2RzID0ge307XG5cbiAgICAoZnVuY3Rpb24gaW5pdCAoKSB7XG4gICAgICBpbml0UGFyZW50Q29udHJvbGxlcigpO1xuXG4gICAgICBwYXJlbnRNZXRob2RzLmFkZEFjdGl2aXR5ID0gJHNjb3BlLmFkZEFjdGl2aXR5O1xuICAgICAgJHNjb3BlLmFkZEFjdGl2aXR5ID0gYWRkQWN0aXZpdHk7XG4gICAgfSkoKTtcblxuICAgIC8qKlxuICAgICAqIEFkZCBuZXcgYWN0aXZpdHlcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7QXJyYXl9IGFjdGl2aXR5U2V0XG4gICAgICogQHBhcmFtIHtTdHJpbmd9IGFjdGl2aXR5VHlwZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGFkZEFjdGl2aXR5IChhY3Rpdml0eVNldCwgYWN0aXZpdHlUeXBlKSB7XG4gICAgICBwYXJlbnRNZXRob2RzLmFkZEFjdGl2aXR5KGFjdGl2aXR5U2V0LCBhY3Rpdml0eVR5cGUpO1xuXG4gICAgICAvLyByZW1vdmUgcmVmZXJlbmNlX2FjdGl2aXR5IHByb3BlcnR5IGZyb20gbmV3bHkgYWRkZWQgYWN0aXZpdHlcbiAgICAgIGFjdGl2aXR5U2V0LmFjdGl2aXR5VHlwZXMuZm9yRWFjaChmdW5jdGlvbiAoYWN0aXZpdHkpIHtcbiAgICAgICAgaWYgKGFjdGl2aXR5Lm5hbWUgPT09IGFjdGl2aXR5VHlwZSkge1xuICAgICAgICAgIGRlbGV0ZSBhY3Rpdml0eS5yZWZlcmVuY2VfYWN0aXZpdHk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpc2UgdGhlIHBhcmVudCBjb250cm9sbGVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gaW5pdFBhcmVudENvbnRyb2xsZXIgKCkge1xuICAgICAgYXBpQ2FsbHMuYWN0VHlwZXMgPSB7IHZhbHVlczogcHJlcGFyZUFjdGl2aXR5VHlwZXMoKSB9O1xuICAgICAgJGNvbnRyb2xsZXIoJ0Nhc2VUeXBlQ3RybCcsIHskc2NvcGU6ICRzY29wZSwgY3JtQXBpOiBjcm1BcGksIGFwaUNhbGxzOiBhcGlDYWxsc30pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBsaXN0IG9mIGFjdGl2aXR5IHR5cGVzIHdpdGggY29tcG9uZW50IHR5cGUgYWRkZWQgdG8gbGFiZWxcbiAgICAgKlxuICAgICAqIEByZXR1cm4ge0FycmF5fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHByZXBhcmVBY3Rpdml0eVR5cGVzICgpIHtcbiAgICAgIHZhciB0YXNrT3B0aW9ucyA9IGFjdGl2aXR5T3B0aW9uc1Rhc2sudmFsdWVzLm1hcChmdW5jdGlvbiAodHlwZSkge1xuICAgICAgICB0eXBlLmxhYmVsID0gKHR5cGUubGFiZWwgKyAnIChUYXNrKScpO1xuXG4gICAgICAgIHJldHVybiB0eXBlO1xuICAgICAgfSk7XG5cbiAgICAgIHZhciBkb2N1bWVudE9wdGlvbnMgPSBhY3Rpdml0eU9wdGlvbnNEb2N1bWVudC52YWx1ZXMubWFwKGZ1bmN0aW9uIChkb2N1bWVudCkge1xuICAgICAgICBkb2N1bWVudC5sYWJlbCA9IChkb2N1bWVudC5sYWJlbCArICcgKERvY3VtZW50KScpO1xuXG4gICAgICAgIHJldHVybiBkb2N1bWVudDtcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gdGFza09wdGlvbnMuY29uY2F0KGRvY3VtZW50T3B0aW9ucyk7XG4gICAgfVxuICB9XG59KShhbmd1bGFyKTtcbiIsIi8qIGdsb2JhbCBhbmd1bGFyICovXG5cbihmdW5jdGlvbiAoYW5ndWxhcikge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhci5tb2R1bGUoJ2NybS10YXNrcy13b3JrZmxvd3MuZGVjb3JhdG9ycycpXG4gICAgLmNvbmZpZyhbJyRwcm92aWRlJywgZnVuY3Rpb24gKCRwcm92aWRlKSB7XG4gICAgICAkcHJvdmlkZS5kZWNvcmF0b3IoJyRyb3V0ZScsIFJvdXRlRGVjb3JhdG9yKTtcbiAgICB9XSk7XG5cbiAgUm91dGVEZWNvcmF0b3IuJGluamVjdCA9IFsnJGRlbGVnYXRlJ107XG5cbiAgZnVuY3Rpb24gUm91dGVEZWNvcmF0b3IgKCRkZWxlZ2F0ZSkge1xuICAgIChmdW5jdGlvbiBpbml0ICgpIHtcbiAgICAgIHZhciBjYXNlVHlwZUVkaXRSb3V0ZSA9ICRkZWxlZ2F0ZS5yb3V0ZXNbJy9jYXNlVHlwZS86aWQnXTtcbiAgICAgIHZhciBjYXNlVHlwZUxpc3RSb3V0ZSA9ICRkZWxlZ2F0ZS5yb3V0ZXNbJy9jYXNlVHlwZSddO1xuXG4gICAgICBjYXNlVHlwZUVkaXRSb3V0ZS5jb250cm9sbGVyID0gJ0Nhc2VUeXBlRXh0ZW5kZWRDb250cm9sbGVyJztcbiAgICAgIGNhc2VUeXBlRWRpdFJvdXRlLnJlc29sdmUuYWN0aXZpdHlPcHRpb25zVGFzayA9IGdldFJlc29sdmVyRm9yQWN0aXZpdHlUeXBlQ29tcG9uZW50KCdDaXZpVGFzaycpO1xuICAgICAgY2FzZVR5cGVFZGl0Um91dGUucmVzb2x2ZS5hY3Rpdml0eU9wdGlvbnNEb2N1bWVudCA9IGdldFJlc29sdmVyRm9yQWN0aXZpdHlUeXBlQ29tcG9uZW50KCdDaXZpRG9jdW1lbnQnKTtcblxuICAgICAgY2FzZVR5cGVMaXN0Um91dGUucmVzb2x2ZS5jYXNlVHlwZXMgPSBnZXRSZXNvbHZlckZvcldvcmtmbG93VHlwZXMoKTtcbiAgICB9KSgpO1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHJlc29sdmVyIGZvciB0aGUgbGlzdCBvZiBhY3Rpdml0eSB0eXBlcyBmb3IgYSBwYXJ0aWN1bGFyIGNvbXBvbmVudC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSAge1N0cmluZ30gICBjb21wb25lbnROYW1lIC0gdGhlIG5hbWUgb2YgdGhlIGFjdGl2aXR5IHR5cGUncyBjb21wb25lbnQuXG4gICAgICogQHJldHVybiB7RnVuY3Rpb259IHRoZSBmdW5jdGlvbiB0aGF0IHdpbGwgcmVzb2x2ZSB0aGUgYWN0aXZpdHkgdHlwZXMuXG4gICAgICovXG4gICAgZnVuY3Rpb24gZ2V0UmVzb2x2ZXJGb3JBY3Rpdml0eVR5cGVDb21wb25lbnQgKGNvbXBvbmVudE5hbWUpIHtcbiAgICAgIHJldHVybiBbJ2NybUFwaScsIGZ1bmN0aW9uIGFjdGl2aXR5T3B0aW9uc1Jlc29sdmVyIChjcm1BcGkpIHtcbiAgICAgICAgcmV0dXJuIGNybUFwaSgnT3B0aW9uVmFsdWUnLCAnZ2V0Jywge1xuICAgICAgICAgIG9wdGlvbl9ncm91cF9pZDogJ2FjdGl2aXR5X3R5cGUnLFxuICAgICAgICAgIGNvbXBvbmVudF9pZDogY29tcG9uZW50TmFtZSxcbiAgICAgICAgICBzZXF1ZW50aWFsOiAxLFxuICAgICAgICAgIG9wdGlvbnM6IHsgc29ydDogJ25hbWUnLCBsaW1pdDogMCB9XG4gICAgICAgIH0pO1xuICAgICAgfV07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHJlc29sdmVyIGZvciB0aGUgbGlzdCBvZiB3b3JrZmxvdyBjYXNlIHR5cGVzLlxuICAgICAqXG4gICAgICogQHJldHVybiB7RnVuY3Rpb259IHRoZSBmdW5jdGlvbiB0aGF0IHdpbGwgcmVzb2x2ZSB0aGUgd29ya2Zsb3cgY2FzZSB0eXBlcy5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBnZXRSZXNvbHZlckZvcldvcmtmbG93VHlwZXMgKCkge1xuICAgICAgcmV0dXJuIFsnY3JtQXBpJywgZnVuY3Rpb24gd29ya2Zsb3dUeXBlc1Jlc29sdmVyIChjcm1BcGkpIHtcbiAgICAgICAgcmV0dXJuIGNybUFwaSgnQ2FzZVR5cGUnLCAnZ2V0Jywge1xuICAgICAgICAgIGNhdGVnb3J5OiAnV09SS0ZMT1cnLFxuICAgICAgICAgIG9wdGlvbnM6IHsgbGltaXQ6IDAgfVxuICAgICAgICB9KTtcbiAgICAgIH1dO1xuICAgIH1cblxuICAgIHJldHVybiAkZGVsZWdhdGU7XG4gIH1cbn0pKGFuZ3VsYXIpO1xuIiwiLyogZ2xvYmFsIGFuZ3VsYXIgKi9cblxuKGZ1bmN0aW9uIChhbmd1bGFyKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyLm1vZHVsZSgnY3JtLXRhc2tzLXdvcmtmbG93cycsIFtcbiAgICAnY3JtLXRhc2tzLXdvcmtmbG93cy5jb3JlJyxcbiAgICAnY3JtLXRhc2tzLXdvcmtmbG93cy5jb250cm9sbGVycycsXG4gICAgJ2NybS10YXNrcy13b3JrZmxvd3MuZGVjb3JhdG9ycydcbiAgXSk7XG59KShhbmd1bGFyKTtcbiJdfQ==
