!function(t){"use strict";angular.module("crm-tasks-workflows.controllers",[])}(),function(t){"use strict";angular.module("crm-tasks-workflows.core",["crmCaseType"])}(),function(t){"use strict";angular.module("crm-tasks-workflows.decorator",[])}(),function(t){"use strict";function o(t,o,e,n,r,i,c){o.debug("Controller: CaseTypeExtendedController"),t("CaseTypeCtrl",{$scope:e,crmApi:n,apiCalls:r});var s,a,l=e.addActivity;e.addActivity=function(t,o){l(t,o),t.activityTypes.forEach(function(t){if(t.name===o)return delete t.reference_activity,!1})},s=i.values.map(function(t){return{id:t.name,text:t.label+" (Task)",icon:t.icon}}),a=c.values.map(function(t){return{id:t.name,text:t.label+" (Document)",icon:t.icon}}),e.activityTypeOptions=s.concat(a)}angular.module("crm-tasks-workflows.controllers").controller("CaseTypeExtendedController",o),o.$inject=["$controller","$log","$scope","crmApi","apiCalls","activityOptionsTask","activityOptionsDocument"]}(),function(t){"use strict";function e(o){return o.routes["/caseType/:id"].controller="CaseTypeExtendedController",function(){function t(t){return t("OptionValue","get",{option_group_id:"activity_type",component_id:"CiviTask",sequential:1,options:{sort:"name",limit:0}})}(o.routes["/caseType/:id"].resolve.activityOptionsTask=t).$inject=["crmApi"]}(),function(){function t(t){return t("OptionValue","get",{option_group_id:"activity_type",component_id:"CiviDocument",sequential:1,options:{sort:"name",limit:0}})}(o.routes["/caseType/:id"].resolve.activityOptionsDocument=t).$inject=["crmApi"]}(),o}angular.module("crm-tasks-workflows.decorator").config(["$provide","$routeProvider",function(t,o){t.decorator("$route",e)}]),e.$inject=["$delegate"]}(),function(t){"use strict";angular.module("crm-tasks-workflows",["crm-tasks-workflows.core","crm-tasks-workflows.controllers","crm-tasks-workflows.decorator"])}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
