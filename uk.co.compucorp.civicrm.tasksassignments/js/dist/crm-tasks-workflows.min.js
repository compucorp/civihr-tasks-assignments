!function(t){"use strict";angular.module("crm-tasks-workflows.controllers",[])}(),function(t){"use strict";angular.module("crm-tasks-workflows.core",["crmCaseType"])}(),function(t){"use strict";angular.module("crm-tasks-workflows.decorators",[])}(),function(t){"use strict";function o(t,o,e,r,n,i,s){o.debug("Controller: CaseTypeExtendedController");var c,a,l=e.addActivity;e.addActivity=function(t,o){l(t,o),t.activityTypes.forEach(function(t){t.name===o&&delete t.reference_activity})},n.actTypes={values:(c=i.values.map(function(t){return t.label=t.label+" (Task)",t}),a=s.values.map(function(t){return t.label=t.label+" (Document)",t}),c.concat(a))},t("CaseTypeCtrl",{$scope:e,crmApi:r,apiCalls:n})}angular.module("crm-tasks-workflows.controllers").controller("CaseTypeExtendedController",o),o.$inject=["$controller","$log","$scope","crmApi","apiCalls","activityOptionsTask","activityOptionsDocument"]}(),function(t){"use strict";function e(o){return o.routes["/caseType/:id"].controller="CaseTypeExtendedController",function(){function t(t){return t("OptionValue","get",{option_group_id:"activity_type",component_id:"CiviTask",sequential:1,options:{sort:"name",limit:0}})}(o.routes["/caseType/:id"].resolve.activityOptionsTask=t).$inject=["crmApi"]}(),function(){function t(t){return t("OptionValue","get",{option_group_id:"activity_type",component_id:"CiviDocument",sequential:1,options:{sort:"name",limit:0}})}(o.routes["/caseType/:id"].resolve.activityOptionsDocument=t).$inject=["crmApi"]}(),o}angular.module("crm-tasks-workflows.decorators").config(["$provide","$routeProvider",function(t,o){t.decorator("$route",e)}]),e.$inject=["$delegate"]}(),function(t){"use strict";angular.module("crm-tasks-workflows",["crm-tasks-workflows.core","crm-tasks-workflows.controllers","crm-tasks-workflows.decorators"])}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
